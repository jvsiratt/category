(|product_category|
 (|one_is_category| 0
  (|one_is_category-1| NIL 3696856966
   ("" (EXPAND "is_category?")
    (("" (BDDSIMP)
      (("1" (EXPAND "assoc?") (("1" (POSTPONE) NIL NIL)) NIL)
       ("2" (POSTPONE) NIL NIL) ("3" (POSTPONE) NIL NIL)
       ("4" (POSTPONE) NIL NIL))
      NIL))
    NIL)
   NIL SHOSTAK))
 (|comp_TCC1| 0
  (|comp_TCC1-1| NIL 3696858841
   ("" (GRIND :THEORIES "product_category") NIL NIL)
   ((|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (NOT CONST-DECL "[bool -> bool]" |booleans| NIL)
    (|obj1| FORMAL-TYPE-DECL NIL |product_category| NIL)
    (|obj2| FORMAL-TYPE-DECL NIL |product_category| NIL)
    (|obj| TYPE-EQ-DECL NIL |product_category| NIL)
    (= CONST-DECL "[T, T -> boolean]" |equalities| NIL)
    (|arr1| FORMAL-TYPE-DECL NIL |product_category| NIL)
    (|arr2| FORMAL-TYPE-DECL NIL |product_category| NIL)
    (|arr| TYPE-EQ-DECL NIL |product_category| NIL)
    (|cod| CONST-DECL "[arr -> obj]" |product_category| NIL)
    (|dom| CONST-DECL "[arr -> obj]" |product_category| NIL))
   NIL))
 (|comp_TCC2| 0
  (|comp_TCC2-1| NIL 3696858841
   ("" (GRIND :THEORIES "product_category") NIL NIL)
   ((|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (NOT CONST-DECL "[bool -> bool]" |booleans| NIL)
    (|obj1| FORMAL-TYPE-DECL NIL |product_category| NIL)
    (|obj2| FORMAL-TYPE-DECL NIL |product_category| NIL)
    (|obj| TYPE-EQ-DECL NIL |product_category| NIL)
    (= CONST-DECL "[T, T -> boolean]" |equalities| NIL)
    (|arr1| FORMAL-TYPE-DECL NIL |product_category| NIL)
    (|arr2| FORMAL-TYPE-DECL NIL |product_category| NIL)
    (|arr| TYPE-EQ-DECL NIL |product_category| NIL)
    (|cod| CONST-DECL "[arr -> obj]" |product_category| NIL)
    (|dom| CONST-DECL "[arr -> obj]" |product_category| NIL))
   NIL))
 (|this_is_category| 0
  (|this_is_category-1| NIL 3696858938
   ("" (EXPAND "is_category?")
    (("" (BDDSIMP)
      (("1" (LEMMA "one_is_category")
        (("1" (LEMMA "two_is_category") (("1" (GRIND) NIL NIL)) NIL)) NIL)
       ("2" (EXPAND "comp_dom_cod?")
        (("2" (SKOLEM!)
          (("2" (BDDSIMP)
            (("1" (EXPAND "comp")
              (("1" (EXPAND "cod")
                (("1" (BDDSIMP)
                  (("1" (LEMMA "two_is_category") (("1" (GRIND) NIL NIL)) NIL)
                   ("2" (LEMMA "one_is_category") (("2" (GRIND) NIL NIL)) NIL))
                  NIL))
                NIL))
              NIL)
             ("2" (EXPAND "comp")
              (("2" (EXPAND "dom")
                (("2" (BDDSIMP)
                  (("1" (LEMMA "two_is_category") (("1" (GRIND) NIL NIL)) NIL)
                   ("2" (LEMMA "one_is_category") (("2" (GRIND) NIL NIL)) NIL))
                  NIL))
                NIL))
              NIL))
            NIL))
          NIL))
        NIL)
       ("3" (LEMMA "one_is_category")
        (("3" (LEMMA "two_is_category") (("3" (GRIND) NIL NIL)) NIL)) NIL)
       ("4" (LEMMA "one_is_category")
        (("4" (LEMMA "two_is_category") (("4" (GRIND) NIL NIL)) NIL)) NIL))
      NIL))
    NIL)
   ((|two_is_category| FORMULA-DECL NIL |product_category| NIL)
    (|obj| TYPE-EQ-DECL NIL |product_category| NIL)
    (|arr| TYPE-EQ-DECL NIL |product_category| NIL)
    (|cod| CONST-DECL "[arr -> obj]" |product_category| NIL)
    (|dom| CONST-DECL "[arr -> obj]" |product_category| NIL)
    (|comp| CONST-DECL "[[f: arr, {g: arr | cod(g) = dom(f)}] -> arr]"
     |product_category| NIL)
    (|obj1| FORMAL-TYPE-DECL NIL |product_category| NIL)
    (|arr1| FORMAL-TYPE-DECL NIL |product_category| NIL)
    (|assoc?| CONST-DECL "bool" |category_assumptions| NIL)
    (|comp_dom_cod?| CONST-DECL "bool" |category_assumptions| NIL)
    (|unity?| CONST-DECL "bool" |category_assumptions| NIL)
    (|id_dom_cod?| CONST-DECL "bool" |category_assumptions| NIL)
    (|obj2| FORMAL-TYPE-DECL NIL |product_category| NIL)
    (|arr2| FORMAL-TYPE-DECL NIL |product_category| NIL)
    (= CONST-DECL "[T, T -> boolean]" |equalities| NIL)
    (NOT CONST-DECL "[bool -> bool]" |booleans| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)
    (|id2| FORMAL-CONST-DECL "[obj2 -> arr2]" |product_category| NIL)
    (|g!1| SKOLEM-CONST-DECL "{g: arr | cod(g) = dom(h!1)}" |product_category|
     NIL)
    (|h!1| SKOLEM-CONST-DECL "arr" |product_category| NIL)
    (|dom2| FORMAL-CONST-DECL "[arr2 -> obj2]" |product_category| NIL)
    (|cod2| FORMAL-CONST-DECL "[arr2 -> obj2]" |product_category| NIL)
    (|cod1| FORMAL-CONST-DECL "[arr1 -> obj1]" |product_category| NIL)
    (|dom1| FORMAL-CONST-DECL "[arr1 -> obj1]" |product_category| NIL)
    (|id1| FORMAL-CONST-DECL "[obj1 -> arr1]" |product_category| NIL)
    (|one_is_category| FORMULA-DECL NIL |product_category| NIL)
    (|f!1| SKOLEM-CONST-DECL "arr" |product_category| NIL)
    (|g!1| SKOLEM-CONST-DECL "{g: arr | cod(g) = dom(f!1)}" |product_category|
     NIL)
    (|comp2| FORMAL-CONST-DECL
     "[[f: arr2, {g: arr2 | cod2(g) = dom2(f)}] -> arr2]" |product_category|
     NIL)
    (|comp1| FORMAL-CONST-DECL
     "[[f: arr1, {g: arr1 | cod1(g) = dom1(f)}] -> arr1]" |product_category|
     NIL)
    (|id| CONST-DECL "[obj -> arr]" |product_category| NIL)
    (A!1 SKOLEM-CONST-DECL "obj" |product_category| NIL)
    (|f!1| SKOLEM-CONST-DECL "{f: arr | dom(f) = A!1}" |product_category| NIL)
    (|g!1| SKOLEM-CONST-DECL "{g: arr | cod(g) = A!1}" |product_category| NIL)
    (A!1 SKOLEM-CONST-DECL "obj" |product_category| NIL)
    (|is_category?| CONST-DECL "bool" |category_assumptions| NIL))
   SHOSTAK)))

